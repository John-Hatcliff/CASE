/*
 * Copyright 2017, Data61
 * Commonwealth Scientific and Industrial Research Organisation (CSIRO)
 * ABN 41 687 119 230.
 *
 * Copyright 2019 Adventium Labs
 * Modifications made to original
 *
 * This software may be distributed and modified according to the terms of
 * the BSD 2-Clause license. Note that NO WARRANTY is provided.
 * See "LICENSE_BSD2.txt" for details.
 *
 * @TAG(DATA61_Adventium_BSD)
 */
#include <configurations/vm.h>

import <std_connector.camkes>;
import <global-connectors.camkes>;
import <seL4VMDTBPassthrough.idl4>;
import <FileServerInterface.camkes>;
import <FileServer/FileServer.camkes>;
import <SerialServer/SerialServer.camkes>;
import <TimeServer/TimeServer.camkes>;
import <vm-connectors.camkes>;
import <devices.camkes>;

import "components/Receiver/Receiver.camkes";


component VM {
    VM_INIT_DEF()
    include <queue.h>;
    dataport queue_t crossvm_dp_0;
}


assembly {
    composition {
        // Scenario 3: VM Sender, Native receiver
        component Receiver receiver;
        VM_GENERAL_COMPOSITION_DEF()
        component VM vmSender;
        VM_COMPONENT_CONNECTIONS_DEF(Sender)
        /* vm serial connections */
        VM_VIRTUAL_SERIAL_COMPOSITION_DEF(Sender)

        connection seL4SharedDataWithCaps cross_vm_conn_1(from vmSender.crossvm_dp_0,  to receiver.p1_in_queue);
        connection seL4VMDTBPassthrough vm_dtb1(from vmSender.dtb_self, to vmSender.dtb);
    }

    configuration {
        receiver.p1_in_queue_access = "R";
        receiver._priority = 50;
        receiver._domain = 1;
        vmSender.crossvm_dp_0 = "W";
        VM_GENERAL_CONFIGURATION_DEF()
        VM_CONFIGURATION_DEF(Sender)
        VM_VIRTUAL_SERIAL_CONFIGURATION_DEF(Sender)

        vmSender.cnode_size_bits = 18;
        vmSender.simple_untyped21_pool = 12;
        vmSender.simple_untyped12_pool = 12;
        vmSender.num_extra_frame_caps = 0;
        vmSender.extra_frame_map_address = 0;
    }
}
