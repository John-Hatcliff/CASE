package WaypointPlanManagerService_Pkg
public
	with CMASI;
	with ServiceBase_Pkg;
	with Base_Types;

	---------------------------------------------------------------------------------------------------------------------
	-- A service that serves plans to a vehicle interface.
	-- 	1) Receive AutomationResponse/MissionCommand/VehicalActionCommand
	-- 	2) Find MissionCommand or VehicalActionCommand for configured ID 
	-- 	3a) Either:
	-- 		Re/Initialize waypoint manager, send Mission commands based on AirVehicleState
	-- 	3b) Or:
	-- 		If VehicalActionCommand commands a change in the vehicle's course, then suspend serving waypoints.
	-- 		Send VehicalActionCommand command
	-- 	4) On command, resume serving waypoints
	---------------------------------------------------------------------------------------------------------------------
	thread WaypointPlanManagerService extends ServiceBase_Pkg::ServiceBase
		features
			-- Subscribed Messages
			AutomationResponse: in event data port CMASI::AutomationResponse.i {
				Compute_Entrypoint_Source_Text => "automation_response_event_handler";
			};
			AirVehicleState: in event data port CMASI::AirVehicleState.i {
				Compute_Entrypoint_Source_Text => "air_vehicle_state_event_handler";
			};
--			IncrementWaypoint : in event data port UXNATIVE::IncrementWaypoint.i;
--			MissionCommand_in: in event data port CMASI::MissionCommand.i;
			-- Sent Messages
			MissionCommand: out event data port CMASI::MissionCommand.i;

			-- Return Home
			ReturnHome: in event port {
				Compute_Entrypoint_Source_Text => "return_home_event_handler";
			};

		properties
			-- https://github.com/afrl-rq/OpenUxAS
			Source_Text => ("src/Services/WaypointPlanManagerService.h", "src/Services/WaypointPlanManagerService.cpp");
			Dispatch_Protocol => Sporadic;
			Classifier_Substitution_Rule => Type_Extension;
			Initialize_Entrypoint_Source_Text => "initialize_wpm";
			Compute_Entrypoint_Source_Text => "run_wpm";
	end WaypointPlanManagerService;

	thread implementation WaypointPlanManagerService.i
	end WaypointPlanManagerService.i;
	
end WaypointPlanManagerService_Pkg;