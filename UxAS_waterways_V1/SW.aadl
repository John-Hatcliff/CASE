package SW
public
	with DRVRS;
	with Waterways_UxAS;
    with CASE_Model_Transformations;
    
	process SW
        features
	       fc_uart_recv: in event data port CASE_Model_Transformations::CASE_UART_Msg.Impl;
           fc_uart_send: out event data port CASE_Model_Transformations::CASE_UART_Msg.Impl;
           radio_recv: in event data port CASE_Model_Transformations::CASE_RF_Msg.Impl;
           radio_send: out event data port CASE_Model_Transformations::CASE_RF_Msg.Impl;           
	end SW;
			
	process implementation SW.Impl
	   subcomponents
	       GIMBAL: thread DRVRS::GimbalDriver.Impl;
           FC_UART: thread DRVRS::FC_UART_Driver.Impl;
           RADIO: thread DRVRS::RadioDriver.Impl;
           UXAS: thread group Waterways_UxAS::Waterways.i;
	   connections
	       -- SW
		   c02: port fc_uart_recv -> FC_UART.recv_data;
		   c03: port radio_recv -> RADIO.recv_data;
		    	           
           -- FC_UART
           c05: port FC_UART.send_data -> fc_uart_send;
           c06: port FC_UART.AirVehicleState -> GIMBAL.AirVehicleState;
           c07: port FC_UART.AirVehicleState -> UXAS.AirVehicleState;
           c08: port FC_UART.AirVehicleState -> RADIO.AirVehicleState;
           
           -- RADIO
           c09: port RADIO.send_data -> radio_send;
           c11: port RADIO.AutomationRequest -> UXAS.AutomationRequest; 	
           c13: port RADIO.AirVehicleConfiguration -> UXAS.AirVehicleConfiguration;
           
           -- UXAS
           c14: port UXAS.MissionCommand -> FC_UART.MissionCommand;
           c15: port UXAS.MissionCommand -> RADIO.MissionCommand;
           c16: port UXAS.GimbalStareAction -> GIMBAL.GimbalStareAction;
           c17: port UXAS.AutomationResponse -> RADIO.AutomationResponse;
	end SW.Impl;
	
end SW;